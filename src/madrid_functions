from pymongo import MongoClient
import requests
from dotenv import load_dotenv
import os
import pandas as pd
import geopandas as gpd
from cartoframes.viz import Map, Layer, popup_element
from functools import reduce
import operator

def geocode(direccion):
    """
    Esta función saca las coordenadas de la dirección que le pases
    """
    data = requests.get(f"https://geocode.xyz/{direccion}?json=1").json()
    try:
        return {"type": "Point", "coordinates": [data["latt"], data["longt"]]}
    except:
        return data

load_dotenv()
client_id = os.getenv("tok1")
client_secret = os.getenv("tok2")

madrid = geocode("Puerta del Sol, Madrid") #coordenadas de Madrid

def extraetodo(json):
    todo = {"nombre": ["name"], "latitud": ["location", "lat"], "longitud": ["location", "lng"]} 
    total = []
    for elemento in json:
        place = {key: getFromDict(elemento, value) for key,value in todo.items()}
        place["location"] = type_point([place["latitud"], place["longitud"]])
        total.append(place)
    return total

def type_point(lista):
    return {"type":"Point", "coordinates": lista}


def funcion(string):
    url_query = 'https://api.foursquare.com/v2/venues/search'
    url_recomendados = 'https://api.foursquare.com/v2/venues/explore'
    parametros = {
    "client_id": client_id,
    "client_secret": client_secret,
    "v": "20180323",
    "ll": f"{madrid['coordinates'][0]}, {madrid['coordinates'][1]}", #aquí pongo la ciudad que quiero
    "query": f"{string}" #aquí pongo lo que quiero buscar en la ciudad.
}
    resp = requests.get(url_query, params = parametros).json()
    data = resp["response"]["venues"]
    df = pd.DataFrame(data)
    map_ = ["location", "lat"]
    getFromDict(resp["response"]["venues"][0], map_)
    resp["response"]["venues"][0]["location"]["address"]
    loquebusco = resp["response"]["venues"]
    lovemosclaro = extraetodo(loquebusco)
    data_final = pd.DataFrame(lovemosclaro)
    #download data as json
    with open ("madrd.json","w") as f: # creamos un archivo vacío en el que vamos a escribir
        json.dump(lovemosclaro,f) # cargamos nuestra lista de diccionarios en ese archivo
    
    return data_final

def visualizar ():
    starbuscks_madrid = funcion("Starbucks")
    gdf = gpd.GeoDataFrame(starbuscks_madrid, geometry=gpd.points_from_xy(starbuscks_madrid.longitud, starbuscks_madrid.latitud))
    return Map(Layer(gdf, "color:purple", popup_hover=[popup_element("nombre", "Starbucks de Madrid")]))